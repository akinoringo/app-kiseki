version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:8.0.13-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_db
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_HOST: '%'
          MYSQL_USER: laravel_db_user
          MYSQL_PASSWORD: 'laravel_db_pass'

    environment:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: '127.0.0.1'
      DB_DATABASE: laravel_db
      DB_PORT: 3306
      DB_USERNAME: laravel_db_user
      DB_PASSWORD: 'laravel_db_pass'

    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "backend/composer.lock" }}
      - run: 
          working_directory: backend
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "backend/composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          key: npm-v1-{{ checksum "backend/package-lock.json" }}
      - run: 
          working_directory: backend
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "backend/package-lock.json" }}
          paths:
            - backend/node_modules
      - run: 
          working_directory: backend        
          command: npm run dev
      - run:
          name: get ready for mysql
          command: |
            sudo apt-get update
            sudo apt-get install default-mysql-client
            sudo docker-php-ext-install zip pdo_mysql
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          working_directory: backend
          name: php test
          environment:
          command: vendor/bin/phpunit